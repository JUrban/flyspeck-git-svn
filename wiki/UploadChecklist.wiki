#summary Checklist for project members before uploading files

Files are downloaded and uploaded with subversion.  See [InstallHolLight] for subversion help.

= Before you Upload =

 # Remove code that is not for the entire group.  For example, if you use definitions from another file, there is no need to repeat the definitions in the file you are uploading.
 # Make sure your code runs without any errors.  
 # Convert all interactive proof sessions (with commands {{{g}}} and {{{e}}}) to packaged proof. See Correct Form below.
 # Do not enter code that would break the project, such as new axioms, CHEAT_TAC, incompatible identifiers, or incompatible definitions.  
 # Make sure that all results are clearly identified with theorem name, identifier, person who did the formal proof, and month the formal proof was completed.
 # You must use "update" in SVN so that your version is consistent with the latest changes made by others, before you "commit"


==How to use unproved lemmas from earlier chapters ==

People who are working on the later chapters may use results from earlier chapters.  Suppose I want to use
GLTVHUM_concl from the file pack/pack_concl.hl before it has been proved.

First, create a new definition:
let GLTVHUM_concl = mk_eq (`GLTVHUM_concl:bool`,Pack_concl.GLTVHUM_concl);;

Then use it:
let mylemma = prove (`GLTVHUM_concl ==>  RiemannHypothesis`,AMAZING_TAC);;




== Correct Form ==

The proof should have the packaged form using {{{THEN}}} and {{{THENL}}}, and {{{prove}}}.  
{{{
let EXAMPLE = prove (`!x y. ?(z:real). x + y = z`,
  (REPEAT GEN_TAC) THEN (EXISTS_TAC `x+y:real`) THEN (REWRITE_TAC[]));;
}}} 
It should *not* be in interactive form :
{{{
g `!x y. ?(z:real). x + y = z`;;
e (REPEAT GEN_TAC);;
e (EXISTS_TAC `x+y:real`);;
e (REWRITE_TAC[]);;
}}}

To convert the proof from the g-e format to prove_by_refinement, follow these steps:

  * Where your proof says {{{g ` goalterm`;;}}} replace it with {{{let theorem_name = prove_by_refinement ( `   goalterm `, [}}}
  * Where it says {{{e ( tactic);;}}}  replace it with {{{tactic ;}}}
  * Terminate the script with closing brackets {{{ ]);;}}}